/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as authLoginImport } from './routes/(auth)/login';

// Create/Update Routes

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)/login': {
      id: '/(auth)/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof authLoginImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/login': typeof authLoginRoute;
}

export interface FileRoutesByTo {
  '/login': typeof authLoginRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/(auth)/login': typeof authLoginRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/login';
  fileRoutesByTo: FileRoutesByTo;
  to: '/login';
  id: '__root__' | '/(auth)/login';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  authLoginRoute: typeof authLoginRoute;
}

const rootRouteChildren: RootRouteChildren = {
  authLoginRoute: authLoginRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(auth)/login"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
